//切片的复制
package main

import(
	"fmt"
)

func main(){
	var slice1=[]int{1,2,3,4,5,6,7,8,9,10}
	var slice2=make([]int,3,5)
	var n int
	//只能复制三个元素
	n=copy(slice2,slice1)
	fmt.Println(n,slice2,len(slice2),cap(slice2))
	//sllice3和slice1指向同一底层数组
	slice3:=slice1[3:6]
	fmt.Println(slice1,slice3)
	//复制后元素重叠
	n=copy(slice3,slice1[1:5])
	fmt.Println(n,slice1,slice3)
}
/***********************************************
由于1和3指向同一个底层数组，所以复制后元素重叠。3刚创建时，
他引用的是底层数组的【4,5,6】复制后1将【2,3,4】三个元素
复制给3，所以最后3的元素【2,3,4】覆盖了1中元素【4,5，6】
***********************************************/

/**********************************************
使用切片长时间引用”超大“的底层数组，会导致严重的内存浪费。
可以新建一个小的切片对象，然后将所需的数据复制过去。函数
copy可以再切片之间复制元素，能够复制的数量取决于复制方和
被复制方的长度值，通常去最小值。需要注意的是，在同一底层
数组的不同切片间复制元素时，元素位置会发生重叠。
*********************************************/
