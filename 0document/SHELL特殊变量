=============================================================================
变量名	含义
=============================================================================
$0		shell或shell脚本的名字
$*		以一对引号给出参数列表
$@		将各个参数分别加双引号返回
$#		参数的个数
$_		代表上一个命令的最后一个参数
$$		代表所在命令的PID
$!		代表最后执行的后台命令的PID
$?		代表上一个命令执行后的退出状态(0成功 非0失败)
${var[@]}	@代表变量var的所有参数 类似$@
${#var[@]}	返回变量数组var所有参数的个数 类似于$#
============================================================================
假设我们定义了一个变量为：
file = /dir1/dir2/dir3/my.file.txt
用${}分别替换得到不同的值：

${file#*/}	删掉第一个/及其左边的字符串	dir1/dir2/dir3/my.file.txt
${file##*/}	删掉最后一个/及其左边的字符串	my.file.txt
${file#*.}	删掉第一个.及其左边的字符串	file.txt
${file##*.}	删掉最后一个.及其左边字符串	txt

${file%/*}	删掉最后一个/及其右边的字符串	/dir1/dir2/dir3
${file%%/*}	删掉第一个/及其右边的字符串	空置
${file%.*}	删掉最后一个.及其右边的字符串	/dir1/dir2/dir3/my.file
${file%%.*}	删掉第一个.及其右边的字符串	/dir1/dir2/dir3/my

记忆方法：
#为删掉左边(键盘上#在$左边)
%为删掉右边(键盘上%在$右边)
单一符号为最小匹配 两个符号为最大匹配

字符串提取
${file:0:5}	提取最左边的5个字节		/dir1
${file:5:5}	提取第5个字节右边的连续5个字节	/dir2

字符串替换
${file/dir/path}	将第一个dir替换为path	/path1/dir2/dir3/my.file.txt
${file//dir/path}	将全部dir替换为path	/path1/path2/path3/my.file.txt

变量的长度
${#file}

数组预算
A=(a b c def)
${A[@]}		可得全部数组			a b c def
${A[*]}		可得全部数组			a b c def 
${A[0]}		可得第一个组数			a
${A[1]}		可得第二个组数			b
${#A[@]}	可得到数值4			4
${#A[*]}	可得到数值4			4
${#A[0]}	可得到第一个组数a的长度		1
${#A[3]}	可得到第四个组数def的长度	3
=============================================================================
